<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>eu.europeana</groupId>
		<artifactId>europeana-parent-pom</artifactId>
		<version>2.0</version>
	</parent>

	<groupId>eu.europeana.iiif</groupId>
	<artifactId>manifest-api</artifactId>
	<version>0.5-alpha</version>
	<packaging>war</packaging>

	<name>Europeana IIIF Manifest API</name>
	<description>Europeana IIIF Manifest API supporting IIIF v2 manifests</description>

	<properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<spring-boot.version>2.1.4.RELEASE</spring-boot.version>
		<spring-hysterix.version>2.1.1.RELEASE</spring-hysterix.version>
		<!-- For now we use a snapshot version until there is an official 1.4 release
		     This is because Metis team made certain classes and methods for us starting june 18th-->
		<metis.version>1.5.0-SNAPSHOT</metis.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot (because we don't use Spring-Boot as parent pom)-->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<!-- use log4j2 instead -->
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
				<!-- we exclude logback because otherwise we get a lot of debug logging from the Apache httpclient.
				alternatively if you want logging from that enable this and control the logging by adding a logback.xml file -->
				<exclusion>
					<artifactId>logback-classic</artifactId>
					<groupId>ch.qos.logback</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
			<version>${spring-hysterix.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
			<version>${spring-hysterix.version}</version>
		</dependency>

		<!-- for retrieving record data -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.4</version>
		</dependency>

		<!-- for parsing record json -->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.4.0</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>eu.europeana.metis</groupId>
			<artifactId>metis-media-service</artifactId>
			<version>${metis.version}</version>
			<exclusions>
				<!-- exclude all other dependencies coming in from metis-media-service -->
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>eu.europeana.metis</groupId>
			<artifactId>metis-common</artifactId>
			<version>${metis.version}</version>
			<exclusions>
				<!-- exclude all other dependencies coming in from metis-media-service -->
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- for serializing -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.9.4</version>
		</dependency>
		<!-- see https://github.com/io-informatics/jackson-jsonld -->
		<dependency>
			<groupId>com.io-informatics.oss</groupId>
			<artifactId>jackson-jsonld</artifactId>
			<version>0.1.1</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.8.0</version>
		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
			<version>2.15.0</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock-standalone</artifactId>
			<version>2.18.0</version>
			<scope>test</scope>
		</dependency>

		<!-- Json schema Test dependency-->
		<dependency>
			<groupId>org.everit.json</groupId>
			<artifactId>org.everit.json.schema</artifactId>
			<version>1.5.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
	</dependencies>

	<build>
		<!-- set fixed name for easy deployment -->
		<finalName>${project.artifactId}</finalName>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
